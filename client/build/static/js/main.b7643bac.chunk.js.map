{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["socket","io","CarSimulator","_ref","carName","count","onIncrement","onDecrement","React","createElement","className","onClick","App","porscheCount","setPorscheCount","useState","formulaCount","setFormulaCount","mercedesCount","setMercedesCount","aviaoCount","setAviaoCount","imersivaCount","setImersivaCount","carroProfissionalCount1","setCarroProfissionalCount1","carroProfissionalCount2","setCarroProfissionalCount2","useEffect","on","data","console","log","off","incrementPorsche","emit","decrementPorsche","incrementFormula","decrementFormula","incrementMercedes","decrementMercedes","incrementImersiva","decrementImersiva","incrementCarroProfissionalCount1","decrementCarroProfissionalCount1","incrementCarroProfissionalCount2","decrementCarroProfissionalCount2","incrementAviao","decrementAviao","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"8KAIA,MAAMA,EAASC,YAAG,yBAEZC,EAAeC,IAAmD,IAAlD,QAAEC,EAAO,MAAEC,EAAK,YAAEC,EAAW,YAAEC,GAAaJ,EAChE,OACEK,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAKL,EAAQ,KAAGC,GAChBG,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,UAAQE,QAASL,GAAa,KAC9BE,IAAAC,cAAA,UAAQE,QAASJ,GAAa,QAgHvBK,MA1Gf,WACE,MAAOC,EAAcC,GAAmBC,mBAAS,IAC1CC,EAAcC,GAAmBF,mBAAS,IAC1CG,EAAeC,GAAoBJ,mBAAS,IAC5CK,EAAYC,GAAiBN,mBAAS,IACtCO,EAAeC,GAAoBR,mBAAS,IAE5CS,EAAyBC,GAA8BV,mBAAS,IAChEW,EAAyBC,GAA8BZ,mBAAS,GA0CvE,OAtCAa,oBAAU,KACR5B,EAAO6B,GAAG,kBAAoBC,IAC5BC,QAAQC,IAAI,mBAAoBF,GAChChB,EAAgBgB,EAAKjB,cACrBI,EAAgBa,EAAKd,cACrBG,EAAiBW,EAAKZ,eACtBK,EAAiBO,EAAKR,eACtBG,EAA2BK,EAAKN,yBAChCG,EAA2BG,EAAKJ,yBAChCL,EAAcS,EAAKV,cAGd,KACLpB,EAAOiC,IAAI,qBAEZ,IAwBDzB,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAAA,UAAI,yBAEJD,IAAAC,cAACP,EAAY,CACbE,QAAQ,UACRC,MAAOQ,EACPP,YA7BqB4B,IAAMlC,EAAOmC,KAAK,qBA8BvC5B,YA7BqB6B,IAAMpC,EAAOmC,KAAK,uBA+BvC3B,IAAAC,cAACP,EAAY,CACbE,QAAQ,aACRC,MAAOW,EACPV,YAhCqB+B,IAAMrC,EAAOmC,KAAK,qBAiCvC5B,YAhCqB+B,IAAMtC,EAAOmC,KAAK,uBAkCvC3B,IAAAC,cAACP,EAAY,CACbE,QAAQ,WACRC,MAAOa,EACPZ,YAnCsBiC,IAAMvC,EAAOmC,KAAK,sBAoCxC5B,YAnCsBiC,IAAMxC,EAAOmC,KAAK,wBAqCxC3B,IAAAC,cAAA,UAAI,cAEJD,IAAAC,cAACP,EAAY,CACbE,QAAQ,WACRC,MAAOiB,EACPhB,YAxCsBmC,IAAMzC,EAAOmC,KAAK,sBAyCxC5B,YAxCsBmC,IAAM1C,EAAOmC,KAAK,wBA0CxC3B,IAAAC,cAAA,UAAI,8BAEJD,IAAAC,cAACP,EAAY,CACbE,QAAQ,UACRC,MAAOmB,EACPlB,YA7CqCqC,IAAM3C,EAAOmC,KAAK,2BA8CvD5B,YA7CqCqC,IAAM5C,EAAOmC,KAAK,6BA+CvD3B,IAAAC,cAACP,EAAY,CACbE,QAAQ,UACRC,MAAOqB,EACPpB,YAhDqCuC,IAAM7C,EAAOmC,KAAK,2BAiDvD5B,YAhDqCuC,IAAM9C,EAAOmC,KAAK,6BAkDvD3B,IAAAC,cAAA,UAAI,UAEJD,IAAAC,cAACP,EAAY,CACbE,QAAQ,QACRC,MAAOe,EACPd,YArDmByC,IAAM/C,EAAOmC,KAAK,mBAsDrC5B,YArDmByC,IAAMhD,EAAOmC,KAAK,uBCtD5Bc,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKjD,IAAkD,IAAjD,OAAEkD,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAStD,EACpEkD,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCFDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtD,IAAAC,cAACD,IAAMuD,WAAU,KACfvD,IAAAC,cAACG,EAAG,QAORqC,K","file":"static/js/main.b7643bac.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./App.css\";\r\n\r\nconst socket = io(\"http://localhost:3001\");\r\n\r\nconst CarSimulator = ({ carName, count, onIncrement, onDecrement }) => {\r\n  return (\r\n    <div className=\"car-simulator\">\r\n      <h3>{carName}: {count}</h3>\r\n      <div className=\"buttons\">\r\n        <button onClick={onIncrement}>+</button>\r\n        <button onClick={onDecrement}>-</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const [porscheCount, setPorscheCount] = useState(0);\r\n  const [formulaCount, setFormulaCount] = useState(0);\r\n  const [mercedesCount, setMercedesCount] = useState(0);\r\n  const [aviaoCount, setAviaoCount] = useState(0);\r\n  const [imersivaCount, setImersivaCount] = useState(0);\r\n\r\n  const [carroProfissionalCount1, setCarroProfissionalCount1] = useState(0)\r\n  const [carroProfissionalCount2, setCarroProfissionalCount2] = useState(0)\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive_message\", (data) => {\r\n      console.log(\"Dados recebidos:\", data);\r\n      setPorscheCount(data.porscheCount);\r\n      setFormulaCount(data.formulaCount);\r\n      setMercedesCount(data.mercedesCount);\r\n      setImersivaCount(data.imersivaCount);\r\n      setCarroProfissionalCount1(data.carroProfissionalCount1)\r\n      setCarroProfissionalCount2(data.carroProfissionalCount2)\r\n      setAviaoCount(data.aviaoCount);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"receive_message\");\r\n    };\r\n  }, []);\r\n\r\n  const incrementPorsche = () => socket.emit(\"increment_porsche\");\r\n  const decrementPorsche = () => socket.emit(\"decrement_porsche\");\r\n\r\n  const incrementFormula = () => socket.emit(\"increment_formula\");\r\n  const decrementFormula = () => socket.emit(\"decrement_formula\");\r\n\r\n  const incrementMercedes = () => socket.emit(\"increment_mercedes\");\r\n  const decrementMercedes = () => socket.emit(\"decrement_mercedes\");\r\n\r\n  const incrementImersiva = () => socket.emit(\"increment_imersiva\");\r\n  const decrementImersiva = () => socket.emit(\"decrement_imersiva\");\r\n\r\n  const incrementCarroProfissionalCount1 = () => socket.emit(\"increment_profissional1\")\r\n  const decrementCarroProfissionalCount1 = () => socket.emit(\"decrement_profissional1\")\r\n\r\n  const incrementCarroProfissionalCount2 = () => socket.emit(\"increment_profissional2\")\r\n  const decrementCarroProfissionalCount2 = () => socket.emit(\"decrement_profissional2\")\r\n\r\n  const incrementAviao = () => socket.emit(\"increment_aviao\");\r\n  const decrementAviao = () => socket.emit(\"decrement_aviao\");\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Térreo</h1>\r\n      <h2>Simuladores de Carro:</h2>\r\n\r\n      <CarSimulator \r\n      carName=\"Porsche\" \r\n      count={porscheCount} \r\n      onIncrement={incrementPorsche} \r\n      onDecrement={decrementPorsche} />\r\n\r\n      <CarSimulator \r\n      carName=\"Fórmula\" \r\n      count={formulaCount} \r\n      onIncrement={incrementFormula} \r\n      onDecrement={decrementFormula} />\r\n      \r\n      <CarSimulator \r\n      carName=\"Mercedes\" \r\n      count={mercedesCount} \r\n      onIncrement={incrementMercedes} \r\n      onDecrement={decrementMercedes} />\r\n\r\n      <h2>Imersivas:</h2>\r\n\r\n      <CarSimulator \r\n      carName=\"Imersiva\" \r\n      count={imersivaCount} \r\n      onIncrement={incrementImersiva} \r\n      onDecrement={decrementImersiva} />\r\n\r\n      <h2>Simuladores Profissionais:</h2>\r\n\r\n      <CarSimulator\r\n      carName=\"McLaren\"\r\n      count={carroProfissionalCount1}\r\n      onIncrement={incrementCarroProfissionalCount1} \r\n      onDecrement={decrementCarroProfissionalCount1}/>\r\n\r\n      <CarSimulator\r\n      carName=\"Formula\"\r\n      count={carroProfissionalCount2}\r\n      onIncrement={incrementCarroProfissionalCount2} \r\n      onDecrement={decrementCarroProfissionalCount2}/>\r\n\r\n      <h2>Aviao:</h2>\r\n\r\n      <CarSimulator\r\n      carName=\"Aviao\"\r\n      count={aviaoCount}\r\n      onIncrement={incrementAviao}\r\n      onDecrement={decrementAviao}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}