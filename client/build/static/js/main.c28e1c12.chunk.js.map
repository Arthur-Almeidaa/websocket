{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["socket","io","CarSimulator","_ref","carName","count","onIncrement","onDecrement","React","createElement","className","onClick","App","porscheCount","setPorscheCount","useState","formulaCount","setFormulaCount","mercedesCount","setMercedesCount","aviaoCount","setAviaoCount","imersivaCount","setImersivaCount","carroProfissionalCount1","setCarroProfissionalCount1","carroProfissionalCount2","setCarroProfissionalCount2","useEffect","on","data","console","log","off","style","color","name","value","incrementPorsche","emit","decrementPorsche","incrementFormula","decrementFormula","incrementMercedes","decrementMercedes","incrementImersiva","decrementImersiva","incrementCarroProfissionalCount1","decrementCarroProfissionalCount1","incrementCarroProfissionalCount2","decrementCarroProfissionalCount2","incrementAviao","decrementAviao","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c28e1c12.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./App.css\";\r\n\r\nconst socket = io(\"https://websocket-5c8h.onrender.com\");\r\n\r\nconst CarSimulator = ({ carName, count, onIncrement, onDecrement }) => {\r\n  return (\r\n    <div className=\"car-simulator\">\r\n      <h3>{carName}: {count}</h3>\r\n      <div className=\"buttons\">\r\n        <button onClick={onIncrement}>+</button>\r\n        <button onClick={onDecrement}>-</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const [porscheCount, setPorscheCount] = useState(0);\r\n  const [formulaCount, setFormulaCount] = useState(0);\r\n  const [mercedesCount, setMercedesCount] = useState(0);\r\n  const [aviaoCount, setAviaoCount] = useState(0);\r\n  const [imersivaCount, setImersivaCount] = useState(0);\r\n\r\n  const [carroProfissionalCount1, setCarroProfissionalCount1] = useState(0)\r\n  const [carroProfissionalCount2, setCarroProfissionalCount2] = useState(0)\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive_message\", (data) => {\r\n      console.log(\"Dados recebidos:\", data);\r\n      setPorscheCount(data.porscheCount);\r\n      setFormulaCount(data.formulaCount);\r\n      setMercedesCount(data.mercedesCount);\r\n      setImersivaCount(data.imersivaCount);\r\n      setCarroProfissionalCount1(data.carroProfissionalCount1)\r\n      setCarroProfissionalCount2(data.carroProfissionalCount2)\r\n      setAviaoCount(data.aviaoCount);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"receive_message\");\r\n    };\r\n  }, []);\r\n\r\n  const incrementPorsche = () => socket.emit(\"increment_porsche\");\r\n  const decrementPorsche = () => socket.emit(\"decrement_porsche\");\r\n\r\n  const incrementFormula = () => socket.emit(\"increment_formula\");\r\n  const decrementFormula = () => socket.emit(\"decrement_formula\");\r\n\r\n  const incrementMercedes = () => socket.emit(\"increment_mercedes\");\r\n  const decrementMercedes = () => socket.emit(\"decrement_mercedes\");\r\n\r\n  const incrementImersiva = () => socket.emit(\"increment_imersiva\");\r\n  const decrementImersiva = () => socket.emit(\"decrement_imersiva\");\r\n\r\n  const incrementCarroProfissionalCount1 = () => socket.emit(\"increment_profissional1\")\r\n  const decrementCarroProfissionalCount1 = () => socket.emit(\"decrement_profissional1\")\r\n\r\n  const incrementCarroProfissionalCount2 = () => socket.emit(\"increment_profissional2\")\r\n  const decrementCarroProfissionalCount2 = () => socket.emit(\"decrement_profissional2\")\r\n\r\n  const incrementAviao = () => socket.emit(\"increment_aviao\");\r\n  const decrementAviao = () => socket.emit(\"decrement_aviao\");\r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n\r\n    <div className=\"header\">\r\n      <h1>Contagens <span style={{ color: '#80cd76' }}>Exceed</span></h1>\r\n      \r\n      <select name=\"Andares\">\r\n        <option value=\"G1\">G1</option>\r\n        <option value=\"G1\">Térreo</option>\r\n        <option value=\"G1\">3 e 4 Andar</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div className=\"h2-container\">\r\n  <div className=\"simuladores-carro\">\r\n    <h2>Simuladores de Carro:</h2>\r\n    <CarSimulator carName=\"Porsche\" count={porscheCount} onIncrement={incrementPorsche} onDecrement={decrementPorsche} />\r\n    <CarSimulator carName=\"Fórmula\" count={formulaCount} onIncrement={incrementFormula} onDecrement={decrementFormula} />\r\n    <CarSimulator carName=\"Mercedes\" count={mercedesCount} onIncrement={incrementMercedes} onDecrement={decrementMercedes} />\r\n  </div>\r\n\r\n  <div className=\"imersivas\">\r\n    <h2>Imersivas:</h2>\r\n    <CarSimulator carName=\"Imersiva\" count={imersivaCount} onIncrement={incrementImersiva} onDecrement={decrementImersiva} />\r\n  </div>\r\n\r\n  <div className=\"simuladores-profissionais\">\r\n    <h2>Simuladores Profissionais:</h2>\r\n    <CarSimulator carName=\"McLaren\" count={carroProfissionalCount1} onIncrement={incrementCarroProfissionalCount1} onDecrement={decrementCarroProfissionalCount1} />\r\n    <CarSimulator carName=\"Fórmula\" count={carroProfissionalCount2} onIncrement={incrementCarroProfissionalCount2} onDecrement={decrementCarroProfissionalCount2} />\r\n  </div>\r\n\r\n  <div className=\"aviao\">\r\n    <h2>Aviao:</h2>\r\n    <CarSimulator carName=\"Aviao\" count={aviaoCount} onIncrement={incrementAviao} onDecrement={decrementAviao} />\r\n  </div>\r\n  </div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}